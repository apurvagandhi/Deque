/**************************************************************
 * Filename: testDeque.cc
 * Author: CSCI 132 Instructor
 * Date: Spring 2018 
 * Course: CSCI 132
 * Purpose: Test deque functions
 **************************************************************/

#include <iostream>
#include "deque.h"

using namespace std;

char get_command();
void help();
bool do_command(char, Deque &);

/* Post: Accepts commands from user as a menu-driven demonstration program
   for the class deque.
   Uses: The class deque and the functions introduction, get_command,
   and do_command. 
*/
int main( ) {
   Deque test_deque;
   help( );
   while (do_command(get_command( ), test_deque));
} // end main( )

void help()
/*
   Post: A help screen for the program is printed, giving the meaning of each
   command that the user may enter.
*/
{
   cout << endl
        << "This program allows the user to enter one command" << endl
        << "(but only one)on each input line." << endl
        << "For example, if the command S is entered, then" << endl
        << "the program will serve the front of the queue." << endl
        << endl
        << " The valid commands are:" << endl
        << "A - Append the next input character to the rear." << endl
        << "P - Push the next input character to the front." << endl
        << "S - Serve the front of the queue" << endl
        << "X - Extract the rear of the queue" << endl
        << "R - Retrieve and print the front entry." << endl
        << "W - Retrieve and write the rear entry." << endl
        << "H - This help screen" << endl
        << "Q - Quit" << endl
        << "Press <Enter> to continue." << flush;

   char c;
   do {
       cin.get(c);
   } while (c != '\n');
}  //end help( )

bool do_command(char c, Deque &test_deque)
/*
   Pre: c represents a valid command.
   Post: Performs the given command c on the Deque test_deque.
   Returns false if c == 'q', otherwise returns true.
   Uses: The class Deque.
*/
{
   bool continue_input = true;
   Queue_entry x;
   switch (c){
      case 'h': help();
                break;
      case 'q':
                cout << "Deque demonstration finished." << endl;
                continue_input = false;
                break;
   // fill in cases to carry out test of deque commands described in help()

   } //end switch on deque option

   return continue_input;
} //end do_command()

char get_command()
/*
   Post: Gets a valid command from the user and,
   after converting it to lower case if necessary,
   returns it.
*/
{
   char c = 'q';
 
   //write code to enter a character
   //and check to see if it is valid
 
   return c;
} //end get_command

